plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.0'
}

ext.slf4jVersion = "1.7.25";
ext.logbackVersion = "1.2.3";
ext.mainClass = "io.github.lunarwatcher.java.haileybot.Main"

group 'io.github.lunarwatcher.java.haileybot'
version '1.0'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.0"
    testImplementation group: 'junit', name: 'junit', version: '4.12'

    // discord
    implementation ("net.dv8tion:JDA:3.8.1_439") {
        exclude module: 'opus-java'
    }

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.4'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.4"

    // Utils
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'org.jetbrains:annotations:16.0.2'
    
    // Logging
    implementation "org.slf4j:slf4j-api:$slf4jVersion@jar"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task execute(type: JavaExec) {

    classpath sourceSets.main.runtimeClasspath
    main = mainClass
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': "Moderation bot for Discord",
                'Implementation-Version': version,
                'Main-Class': mainClass
    }
    baseName = project.name
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        // From https://stackoverflow.com/a/51058320/6296561 - [Konrad Botor](https://stackoverflow.com/users/9624452/)
        project.configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    with jar
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}